### Arithmetics ##########################################################################
1+100
7/2
sqrt(3)

### Objects ##########################################################################
#geting working directory. Output: wd path
getwd()

# Defining an object with name "y"
y = "some text"
y
class(y)

#vectors - IMP: vectors can only contain one class
x = c(1,3,100)
class(x)
x*2


#text in a vector stores all content as character objects
z=c(1,2,3, "hello SDS")
class(z)

#work around this by creating a list
k = list(c(1,2,3), "hello SDS")
class(k)

#Logical(boolean) is another class (for logic statements) [NA, NULL, FALSE, etc]
y2 = NA
k2 = FALSE
class(y2)
class(k2)

#R can give logic results as well
y3 = 2
k3 = 3
y3 > k3

#checking for NA
i=NA
is.na(i)
j=2
is.na(j)

### Importing data ##########################################################################
#a DATA FRAME is a list of vectors of the same length (think spreadsheet)
#create data frames whenever possible

#creating a data frame called df
df = data.frame(
  y=c(1,2,4),
  x=c("no", "SDS", "hello")
  )
View(df)
class(df)

#bringing a vector from a dataframe is done with $
df$y
class(df$y)

#R can bring out specific rows or columns
df[,1]
df[1,]

#sumstats
summary(df)
names(df)
rownames(df)

#write row n of a dataframe
head(df,1)
head(df,2)

### Installing packages ##########################################################################
#there are two sources for packages CRAN and github
#installing a package and loading its library
install.packages("readr")
library("readr")

    #installing from github
    install.packages("devtools")
    library("devtools")
    install_github("hadley/purrr")

### Actually importing data ##########################################################################
#is done with the package rio, using the function import
install.packages("rio")
  library("rio")
  import("C:\Users\Kristian\Google Drive\KU\2. semester\nameoffile.xlsx")
  View(excel.file)

#saving is done with the export function

### Functions ##########################################################################
#the template for functions is
my_func = function(input1, input2, ..., inputN){
  #define output using input1, input2, ..., inputN
  return(output)
}
#for example
my_first_func = function(number){
  new.number = number + 2
return(new.number)
}

### Getting help ###
#use ? to acces help for specific Functions
library("rio")
?import

#if you dont know the name of the function use ?? to search all installed packages
??read_csv

#otherwise: google, stackoverflow

### Ã˜velse ##########################################################################
library("rio")
filepath = "https://raw.githubusercontent.com/kosukeimai/qss/master/INTRO/turnout.csv"
df=import(filepath)

#sumstats
  summary(df)
  names(df)
  rownames(df)
  View(df)

#Lav en dataframe til forskellige turnoutratios
turnout = data.frame(
  TR_VAP = 100* df$total / df$VAP,
  TR_VAPO = 100* df$total / (df$VAP + df$overseas),
  TR_VEP = 100* df$total / df$VEP,
  ANES = df$ANES
)

View(turnout)

#lav en dataframe til afvigelser fra ANES
diff = data.frame(
  diff_VAP = turnout$TR_VAP - turnout$ANES,
  diff_VAPO = turnout$TR_VAPO - turnout$ANES,
  diff_VEP = turnout$TR_VEP - turnout$ANES
)

View(diff)
summary(diff)
